name: Prepare & Deploy a Release

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  WC_DEVELOP_REPO: git@github.com:woocommerce/woocommerce.git
  WC_PHPUNIT_REPO: git@github.com:ndigitals/wc-phpunit.git
  PHP_VERSION: '7.4'
  COMPOSER_VERSION: '2.2'
  ACTION_VERSION: 1

jobs:
  release:
    name: New Release

    if: github.repository == 'ndigitals/wc-phpunit-build'

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      # https://github.com/marketplace/actions/checkout
      uses: actions/checkout@v2

    - name: Get Composer Cache Directory
      id: composer-cache
      if: ${{ !env.ACT }}
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache Composer dependencies
      if: ${{ !env.ACT }}
      # https://github.com/marketplace/actions/cache
      uses: actions/cache@v2
      env:
        composer-cache-name: cache-composer
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-build-${{ env.composer-cache-name }}-${{ env.COMPOSER_VERSION }}-php-${{ env.PHP_VERSION }}-v${{ env.ACTION_VERSION }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.composer-cache-name }}-wp-${{ matrix.wordpress-version }}-wc-${{ matrix.woocommerce-version }}-v${{ env.ACTION_VERSION }}-

    - name: Setup PHP & Composer Environment
      # https://github.com/marketplace/actions/setup-php-action
      uses: shivammathur/setup-php@v2
      with:
        php-version: "${{ env.PHP_VERSION }}"
        tools: "composer:${{ env.COMPOSER_VERSION }}"

    - name: Environment Check
      run: php -v && composer --version

    - name: Install Composer Dependencies
      run: composer install --no-dev --prefer-dist

    - name: Build WC PHPUnit Release
      run: bin/build

    - name: Deploy WC PHPUnit Release
      run: bin/deploy

